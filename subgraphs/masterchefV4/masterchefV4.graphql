type MasterChef @entity {
  # Contract address
  id: ID!

  totalAllocPoint: BigInt!

  undistributedVolt: BigInt!

  lastHarvestBlock: BigInt!

  voltPerSec: BigInt!

  pools: [Pool!] @derivedFrom(field: "masterChef")

  poolCount: BigInt!

  timestamp: BigInt!

  block: BigInt!
}

type Pool @entity {
  # Index of pool in poolInfo on MasterChef contract
  id: ID!

  masterChef: MasterChef

  v3Pool: Bytes!

  allocPoint: BigInt!

  token0: Token

  token1: Token

  voltPerSec: BigDecimal!

  wfusePerSec: BigDecimal!

  timestamp: BigInt!

  block: BigInt!

  userPositions: [UserPosition!]! @derivedFrom(field: "pool")
}

type Token @entity {
  id: ID!

  symbol: String!

  name: String!

  decimals: Int!
}

type UserPosition @entity {
  # tokenId
  id: ID!

  pool: Pool!

  tickLower: BigInt!

  tickUpper: BigInt!

  liquidity: BigInt!

  timestamp: BigInt!

  block: BigInt!

  user: User

  earned: BigInt!

  isStaked: Boolean!
}

type User @entity {
  id: ID!

  address: Bytes!

  timestamp: BigInt!

  block: BigInt!
}
